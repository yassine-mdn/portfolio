import type {Metadata} from "next";
import {Geist, Geist_Mono} from "next/font/google";
import "../globals.css";
import {NextIntlClientProvider} from 'next-intl';
import {getMessages, setRequestLocale} from 'next-intl/server';
import {notFound} from 'next/navigation';
import {routing} from "@/i18n/routing";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

type Props = {
    children: React.ReactNode;
    params: { locale: string }
}

export default async function RootLayout(props: Props) {

    const { locale  } = await props.params;

    // Ensure that the incoming `locale` is valid
    /* eslint-disable @typescript-eslint/no-explicit-any */
    if (!routing.locales.includes(locale as any)) {
        notFound();
    }
    
    // Providing all messages to the client
    // side is the easiest way to get started
    const messages = await getMessages();
    setRequestLocale(locale);

  return (
      <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased mx-auto min-h-screen max-w-screen-xl px-6 py-12 font-sans md:px-12 md:py-16 lg:py-0`}
      >
      <NextIntlClientProvider messages={messages}>
          {props.children}
      </NextIntlClientProvider>
      </body>
    </html>
  );
}
